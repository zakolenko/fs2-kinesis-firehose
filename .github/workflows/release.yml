name: build

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
    tags: ["v[0-9]+*"]

jobs:
#  jvm-tests:
#    name: JVM (scala ${{ matrix.scala }}, jvm ${{ matrix.java }})
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-latest]
#        java: [8, 11]
#        scala: [2.13.3, 3.7.1]
#        command: ["ci-jvm"]
#
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: olafurpg/setup-scala@v10
#        with:
#          java-version: "adopt@1.${{ matrix.java }}"
#
#      - name: sbt ++${{ matrix.scala }} ${{ matrix.command }}
#        run: |
#          ./.github/scripts/build.sh
#        env:
#          SCALA_VERSION: ${{ matrix.scala }}
#          SBT_COMMAND: ${{ matrix.command }}
#
#  package-tests:
#    name: Package (scala ${{ matrix.scala }}, jvm ${{ matrix.java }})
#    strategy:
#      fail-fast: true
#      matrix:
#        os: [ubuntu-latest]
#        java: [11]
#        scala: [2.13.3, 3.7.1]
#        command: [ci-package]
#
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - uses: actions/checkout@v2
#      - uses: olafurpg/setup-scala@v10
#        with:
#          java-version: "adopt@1.${{ matrix.java }}"
#
#      - name: sbt ++${{ matrix.scala }} ${{ matrix.command }}
#        run: |
#          ./.github/scripts/build.sh
#        env:
#          SCALA_VERSION: ${{ matrix.scala }}
#          SBT_COMMAND: ${{ matrix.command }}

  #-----------------------------------------------------------------------------------
  # Publishing tasks
  #-----------------------------------------------------------------------------------

  publish_sonatype:
    name: Publish to Sonatype
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
#    needs: [ jvm-tests, package-tests ]
    strategy:
      fail-fast: true
      max-parallel: 1
      matrix:
        command: [ci-release]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: olafurpg/setup-scala@v10
        with:
          java-version: "adopt@1.8"

      - name: Install GnuPG2
        run: |
          sudo apt-get update && sudo apt-get -y install gnupg2
          mkdir ~/.gnupg && chmod 700 ~/.gnupg
          echo use-agent >> ~/.gnupg/gpg.conf
          echo pinentry-mode loopback >> ~/.gnupg/gpg.conf
          echo allow-loopback-pinentry >> ~/.gnupg/gpg-agent.conf
          chmod 600 ~/.gnupg/*
          echo RELOADAGENT | gpg-connect-agent
          echo $PGP_SECRET | base64 --decode | gpg --import --no-tty --batch --yes
        env:
          PGP_SECRET: ${{secrets.PGP_SECRET}}

      - name: sbt ci-release
        run: |
          sbt +clean ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
